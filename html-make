#! /bin/bash

#  You can call this to generate a boilerplate 
#  html doc and open vscode with chrome.
#  You can also pass in "vue" for 
#  vue boilerpalte

vue2Template='<div id="app">Hello World!</div>
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script>
    new Vue({
        el: "#app",
        data(){
            return {}
        },
    })
</script>'

vue3Template=' <script type="text/x-template" id="foo-bar">
        <div>
            <div>
                Hello From the <b>Foo Bar</b> component
            </div>
        </div>
    </script>
    <div id="app">

        {{number}}

        <foo-bar />

    </div>
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>

    <script>

        const { createApp } = Vue


        const app = createApp({
            data() {
                return {
                    number: 2
                }
            },
        })

        app.component("foo-bar", { template: "#foo-bar" })

        app.mount("#app")
    </script>'

if [ "$1" == "vue2" ]; then
    library="$vue2Template"

elif [ "$1" == "vue" ]; then
    library="$vue3Template"
    else library='<h1>Hello World!</h1>'
fi

boilerPlate='<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
     h1{

     }
    </style>
</head>
<body>  
'"${library}"'  
</body>
</html>'

name='/tmp/index';
if [[ -e $name.html ]] ; then
    i=1
    while [[ -e $name-$i.html ]] ; do
        let i++
    done
    name="$name-$i"
fi

newFileName="$name.html"
echo "$boilerPlate" > $newFileName && code $newFileName >/dev/null 2>&1 &  google-chrome $newFileName >/dev/null 2>&1;
